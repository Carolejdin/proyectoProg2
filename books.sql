

USE books_db;

CREATE TABLE users(
id INT PRIMARY KEY AUTO_INCREMENT UNIQUE NOT NULL,
username VARCHAR(100) UNIQUE NOT NULL,
email VARCHAR(255) UNIQUE NOT NULL,
birthDay DATE,
password VARCHAR(255) NOT NULL,
dni INT UNIQUE NOT NULL,
profilePic VARCHAR(255) NOT NULL,
createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
deletedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE products(
id INT PRIMARY KEY AUTO_INCREMENT UNIQUE NOT NULL ,
nombre VARCHAR(255) NOT NULL,
autor VARCHAR(255) NOT NULL,
anioDePublicacion DATE,
editorial VARCHAR(255) NOT NULL,
descripcion VARCHAR(255) NOT NULL,
imagen VARCHAR(255) NOT NULL,
comentario VARCHAR(255) NOT NULL,
-- usuarioId INT UNSIGNED UNIQUE NOT NULL,
-- FOREIGN KEY (usuarioId) REFERENCES users(id),
createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
deletedAt  TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE followers (
id INT PRIMARY KEY AUTO_INCREMENT UNIQUE NOT NULL,
seguidor INT,
seguido INT,
FOREIGN KEY (seguidor) REFERENCES users(id),
FOREIGN KEY (seguido) REFERENCES users(id),
createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
deletedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE comentarios(
id INT PRIMARY KEY AUTO_INCREMENT UNIQUE NOT NULL,
comentario VARCHAR(400) NOT NULL,
usuarioId INT,
productsId INT,
FOREIGN KEY(usuarioId) REFERENCES users(id),
FOREIGN KEY (productsId) REFERENCES products(id),
createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
updatedAt TIMESTAMP  DEFAULT CURRENT_TIMESTAMP,
deletedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


